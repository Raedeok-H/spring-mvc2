** package 구조
      hello.login
            -domain
                item
                member
                login
            -web
                item
                member
                login

** 도메인이 가장 중요하다.
    도메인 = 화면, UI, 기술 인프라 등등의 영역은 제외한 시스템이 구현해야 하는 핵심 비즈니스 업무 영역을 말함

    향후 web 을 다른 기술로 바꾸어도 "도메인은 그대로 유지"할 수 있어야 한다.
    이렇게 하려면 web 은 domain 을 알고있지만 domain 은 web 을 모르도록 설계해야 한다.
    이것을 web 은 domain 을 의존하지만, domain 은 web 을 의존하지 않는다고 표현한다.
    예를 들어 web  패키지를 모두 삭제해도 domain 에는 전혀 영향이 없도록 의존관계를 설계하는 것이 중요하다.

    반대로 이야기하면 " domain 은 web 을 참조하면 안된다. "




** 쿠키와 보안 문제
    쿠키를 사용해서 로그인Id를 전달해서 로그인을 유지할 수 있었다.
    그런데 여기에는 심각한 보안 문제가 있다.

    1. 브라우저에서도 임의 변경가능
    2. 도난 가능

    ** 대안
        - 쿠키에 중요한 값을 노출하지 않고, 사용자 별로 예측 불가능한 임의의 토큰(랜덤 값)을 노출하고,
        서버에서 토큰과 사용자 id를 매핑해서 인식한다. 그리고 서버에서 토큰을 관리한다.
        - 토큰을 털어가도 시간이 지나면 사용할 수 없도록 서버에서 해당 토큰의 만료시간을 짧게(예:30분)한다.
        해킹의 의심되는 경우 서버에서 해당 토큰을 강제로 제거한다.



** 세션 동작 방식
    ** 목표
        앞서 쿠키에 중요한 정보를 보관하는 방법은 여러가지 보안 이슈가 있었다.
        이 문제를 해결하려면 결국 중요한 정보를 모두 서버에 저장해야 한다.
        그리고 클라이언트와 서버는 추정 불가능한 임의의 식별자 값으로 연결해야 한다.
        이렇게 서버에 중요한 정보를 보관하고 연결을 유지하는 방법을 세션이라 한다.

    UUID는 추정이 불가능하다.

    1. 클라이언트가 서버로 id, pw 로 로그인한다.
    2. 서버는 "id, pw" 로 "회원 저장소"에서 비교하여 회원을 찾는다.
    3. 찾은 회원에 대해 "uuid" 를 생성해 "세션저장소"에 저장한다.
    4. 클라이언트로 uuid 만 "쿠키"에 담아 보낸다.
    5. 다음부터 클라이언트는 "쿠키를 같이" 서버로 보낸다.
    6. 서버는 "쿠키의 uuid 로" "세션 저장소"에서 회원을 식별한다.

    ** 세션 동작 정리
        세션을 사용해서 서버에서 중요한 정보를 관리하게 되었다. 덕분에 다음과 같은 보안 문제들을 해결할 수 있다.

        1. 쿠키 값을 변조 가능 -> 예상 불가능한 복잡한 세션Id를 사용한다.
        2. 쿠키에 보관하는 정보는 클라이언트 해킹시 털릴 가능성이 있다. -> 세션Id가 털려도 여기에는 중요한 정보가 없다.
        3. 쿠키 탈취 후 사용 -> 해커가 토큰을 털어가도 시간이 지나면 사용할 수 없도록,
           서버에서 세션의 만료시간을 짧게 (예: 30분) 유지한다.
           또는 해킹이 의심되는 경우 서버에서 해당 세션을 강제로 제거하면 된다.



** 세션 관리는 크게 3가지 기능을 제공하면 된다.
    1.세션 생성
        sessionId 생성 (임의의 추정 불가능한 랜덤 값)
        세션 저장소에 sessionId와 보관할 값 저장
        sessionId로 응답 쿠키를 생성해서 클라이언트에 전달
    2.세션 조회
        클라이언트가 요청한 sessionId 쿠키의 값으로, 세션 저장소에 보관한 값 조회
    3.세션 만료
        클라이언트가 요청한 sessionId 쿠키의 값으로, 세션 저장소에 보관한 sessionId와 값 제거
