** 파일 업로드 소개
    문자와 바이너리를 동시에 전송하는 상황이다.
    이 문제를 해결하기 위해 HTTP는 multipart/form-data 라는 전송 방식을 제공한다.
    방식을 사용하려면 Form 태그에 별도의 enctype="multipart/form-data" 를 지정해야 한다.

    multipart/form-data 방식은 다른 종류의 여러 파일과 폼의 내용 함께 전송할 수 있다.
    (그래서 이름이 multipart 이다.)

    ** Part
       multipart/form-data 는 application/x-www-form-urlencoded 와 비교해서 매우 복잡하고 각각의 부분( Part )로 나누어져 있다.
       그렇다면 이렇게 복잡한 HTTP 메시지를 서버에서 어떻게 사용할 수 있을까?


    ** 업로드 사이즈 제한
       spring.servlet.multipart.max-file-size=1MB
       spring.servlet.multipart.max-request-size=10MB

       max-file-size : 파일 하나의 최대 사이즈, 기본 1MB
       max-request-size : 멀티파트 요청 하나에 여러 파일을 업로드 할 수 있는데, 그 전체 합이다. 기본 10MB

    ** spring.servlet.multipart.enabled 끄기
       spring.servlet.multipart.enabled=false  (기본 true)

       spring.servlet.multipart.enabled 옵션을 끄면 서블릿 컨테이너는 멀티파트와 관련된 처리를 하지 않는다.


    ** Part 주요 메서드
           part.getSubmittedFileName() : 클라이언트가 전달한 파일명
           part.getInputStream(): Part의 전송 데이터를 읽을 수 있다.
           part.write(...): Part를 통해 전송된 데이터를 저장할 수 있다.

   서블릿이 제공하는 Part 는 편하기는 하지만, HttpServletRequest 를 사용해야 하고,
   추가로 파일 부분만 구분하려면 여러가지 코드를 넣어야 한다.
   이번에는 스프링이 이 부분을 얼마나 편리하게 제공하는지 확인해보자.


   ** 스프링과 파일 업로드
      스프링은 MultipartFile 이라는 인터페이스로 멀티파트 파일을 매우 편리하게 지원한다.

   ** MultipartFile 주요 메서드
      file.getOriginalFilename() : 업로드 파일 명
      file.transferTo(...) : 파일 저장